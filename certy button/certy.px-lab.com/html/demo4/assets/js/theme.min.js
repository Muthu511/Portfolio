function ace_detect_device_type(){/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?(ace.mobile=!0,ace.html.addClass("crt-mobile")):(ace.mobile=!1,ace.html.addClass("crt-desktop"))}function ace_append_overlay(){ace.body.append(ace.overlay.obj),ace.overlay.obj[0].style.opacity=0,window.getComputedStyle(ace.overlay.obj[0]).opacity,ace.overlay.obj[0].style.opacity=1}function ace_remove_overlay(){ace.overlay.obj[0].style.opacity=0,ace.overlay.obj.remove()}function ace_lock_scroll(){var e=ace.html.outerWidth(),t=ace.body.outerHeight(),o=[self.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft,self.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop];ace.html.data("scroll-position",o),ace.html.data("previous-overflow",ace.html.css("overflow")),ace.html.css("overflow","hidden"),window.scrollTo(o[0],o[1]);var r=ace.body.outerWidth()-e,i=ace.body.outerHeight()-t;ace.body.css({"margin-right":r,"margin-bottom":i}),ace.html.addClass("crt-lock-scroll")}function ace_unlock_scroll(){ace.html.css("overflow",ace.html.data("previous-overflow"));var e=ace.html.data("scroll-position");window.scrollTo(e[0],e[1]),ace.body.css({"margin-right":0,"margin-bottom":0}),ace.html.removeClass("crt-lock-scroll")}function ace_open_sidebar(){ace.html.addClass("crt-sidebar-opened"),ace_append_overlay(),ace_lock_scroll()}function ace_close_sidebar(){ace.html.removeClass("crt-sidebar-opened"),ace_remove_overlay(),ace_unlock_scroll()}function ace_progress_chart(e,t,o,r){var i=new ProgressBar.Circle(e,{color:certy.vars.themeColor,strokeWidth:5,trailWidth:0,text:{value:t,className:"progress-text",style:{top:"50%",left:"50%",color:certy.progress.textColor,position:"absolute",margin:0,padding:0,transform:{prefix:!0,value:"translate(-50%, -50%)"}},autoStyleContainer:!0,alignToBottom:!0},svgStyle:{display:"block",width:"100%"},duration:r,easing:"easeOut"});i.animate(o)}function ace_progress_line(e,t,o,r){var i=new ProgressBar.Line(e,{strokeWidth:4,easing:"easeInOut",duration:r,color:certy.vars.themeColor,trailColor:certy.progress.trailColor,trailWidth:4,svgStyle:{width:"100%",height:"100%"},text:{value:t,className:"progress-text",style:{top:"-25px",right:"0",color:certy.progress.textColor,position:"absolute",margin:0,padding:0,transform:{prefix:!0,value:"translate(0, 0)"}},autoStyleContainer:!0}});i.animate(o)}function ace_is_elem_in_viewport(e,t){var o=e[0].getBoundingClientRect();return o.bottom>=0&&o.right>=0&&o.top+t<=(window.innerHeight||document.documentElement.clientHeight)&&o.left<=(window.innerWidth||document.documentElement.clientWidth)}function ace_is_elems_in_viewport(e,t){for(var o=0;o<e.length;o++){var r=$(e[o]);if(r.hasClass("crt-animate")&&ace_is_elem_in_viewport(r,t)){if(r.removeClass("crt-animate").addClass("crt-animated"),r.hasClass("progress-chart")){var i=r.find(".progress-bar");ace_progress_chart(i[0],i.data("text"),i.data("value"),1e3)}if(r.hasClass("progress-line")){var a=r.find(".progress-bar");ace_progress_line(a[0],a.data("text"),a.data("value"),1e3)}}}}function ace_appear_elems(e,t){ace_is_elems_in_viewport(e,t),$(window).scroll(function(){ace_is_elems_in_viewport(e,t)}),$(window).resize(function(){ace_is_elems_in_viewport(e,t)})}function initialiseGoogleMap(){var e,t=44.5403,o=-78.5463,r=$("#map"),i=r.get(0),a=[{featureType:"all",elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#000000"},{lightness:40}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#000000"},{lightness:16}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#000000"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#000000"},{lightness:17},{weight:1.2}]},{featureType:"administrative",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"administrative.country",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"administrative.country",elementType:"geometry",stylers:[{visibility:"simplified"}]},{featureType:"administrative.country",elementType:"labels.text",stylers:[{visibility:"simplified"}]},{featureType:"administrative.province",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"administrative.locality",elementType:"all",stylers:[{visibility:"simplified"},{saturation:"-100"},{lightness:"30"}]},{featureType:"administrative.neighborhood",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"administrative.land_parcel",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"landscape",elementType:"all",stylers:[{visibility:"simplified"},{gamma:"0.00"},{lightness:"74"}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#000000"},{lightness:20}]},{featureType:"landscape.man_made",elementType:"all",stylers:[{lightness:"3"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#000000"},{lightness:21}]},{featureType:"road",elementType:"geometry",stylers:[{visibility:"simplified"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#000000"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#000000"},{lightness:29},{weight:.2}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#000000"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#000000"},{lightness:16}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#000000"},{lightness:19}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#000000"},{lightness:17}]}];r.data("latitude")&&(t=r.data("latitude")),r.data("longitude")&&(o=r.data("longitude")),e=new google.maps.LatLng(t,o);var s={zoom:14,center:e,scrollwheel:!0,mapTypeId:google.maps.MapTypeId.ROADMAP,styles:a};r=new google.maps.Map(i,s),google.maps.event.addDomListener(window,"resize",function(){r.setCenter(e)})}var certy={vars:{rtl:!1,themeColor:"#d14b4a",screenMd:"992px"},nav:{height:"auto",arrow:!1,sticky:{top:"-1px",active:!0},tooltip:{active:!0}},sideBox:{sticky:{top:"20px",active:!0}},progress:{animation:!0,textColor:"inherit",trailColor:"rgba(0,0,0,0.07)"}};certy.initGlobalVars=function(){this.vars.html=$("html"),this.vars.body=$("body"),this.vars.footer=$("#crt-footer"),this.vars.windowW=$(window).width(),this.vars.windowH=$(window).height(),this.vars.windowScrollTop=$(window).scrollTop(),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?(this.vars.mobile=!0,this.vars.html.addClass("mobile")):(this.vars.mobile=!1,this.vars.html.addClass("desktop"))},certy.lockScroll=function(){var e=certy.vars.html.outerWidth(),t=certy.vars.body.outerHeight(),o=[self.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft,self.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop];certy.vars.html.data("scroll-position",o),certy.vars.html.data("previous-overflow",certy.vars.html.css("overflow")),certy.vars.html.css("overflow","hidden"),window.scrollTo(o[0],o[1]);var r=certy.vars.body.outerWidth()-e,i=certy.vars.body.outerHeight()-t;certy.vars.body.css({"margin-right":r,"margin-bottom":i}),certy.vars.html.addClass("lock-scroll")},certy.unlockScroll=function(){certy.vars.html.css("overflow",certy.vars.html.data("previous-overflow"));var e=certy.vars.html.data("scroll-position");window.scrollTo(e[0],e[1]),certy.vars.body.css({"margin-right":0,"margin-bottom":0}),certy.vars.html.removeClass("lock-scroll")},certy.nav.initScroll=function(e){e.height(e.height()).animate({height:certy.nav.height},700,function(){e.mCustomScrollbar({axis:"y",scrollbarPosition:"outside"})}),certy.nav.arrow&&($("#crt-nav-tools").removeClass("hidden"),$("#crt-nav-arrow").on("click",function(){e.mCustomScrollbar("scrollTo","-="+certy.nav.height)}))},certy.nav.exists=!1,certy.nav.makeSticky=function(){this.sticky.active&&!certy.vars.mobile&&Modernizr.mq("(min-width: "+certy.vars.screenMd+")")&&(this.exists?certy.vars.windowScrollTop>this.wrap.offset().top?this.el.css({top:this.sticky.top,left:this.wrap.offset().left,width:this.wrap.width(),bottom:"auto",position:"fixed"}):this.el.css({top:"0",left:"auto",width:"auto",bottom:"auto",position:"relative"}):(this.el=$("#crt-nav-inner"),this.wrap=$("#crt-nav-wrap"),this.el.length>0&&this.wrap.length>0&&(this.exists=!0)))},certy.nav.tooltip.timer=0,certy.nav.tooltip.el="",certy.nav.tooltip.show=function(e){certy.nav.tooltip.timer=setTimeout(function(){certy.nav.tooltip.el=$('<div class="crt-tooltip"></div>');var t=e.offset().top,o=e.offset().left,r=o+e.outerWidth(),i=(e.outerWidth(),0);certy.vars.body.append(certy.nav.tooltip.el),certy.nav.tooltip.el.text(e.data("tooltip")),r+certy.nav.tooltip.el.outerWidth()<certy.vars.windowW?certy.nav.tooltip.el.addClass("arrow-left").css({left:r+"px",top:t+i+"px"}):certy.nav.tooltip.el.addClass("arrow-right text-right").css({left:o-certy.nav.tooltip.el.outerWidth()-10+"px",top:t+i+"px"}),certy.nav.tooltip.el.fadeIn(150)},150)},certy.nav.tooltip.hide=function(){clearTimeout(certy.nav.tooltip.timer),certy.nav.tooltip.el.length>0&&certy.nav.tooltip.el.fadeOut(150,function(){certy.nav.tooltip.el.remove()})},certy.sideBox.exists=!1,certy.sideBox.makeSticky=function(){this.sticky.active&&!certy.vars.mobile&&Modernizr.mq("(min-width: "+certy.vars.screenMd+")")&&(this.exists?certy.vars.windowScrollTop>this.wrap.offset().top?this.el.css({top:this.sticky.top,left:this.wrap.offset().left,width:this.wrap.width(),bottom:"auto",position:"fixed"}):this.el.css({top:"0",left:"auto",width:"auto",bottom:"auto",position:"relative"}):(this.el=$("#crt-side-box"),this.wrap=$("#crt-side-box-wrap"),this.el.length>0&&this.wrap.length>0&&(this.exists=!0)))},certy.slider=function(e){for(var t=0;t<e.length;t++)"none"!=$(e[t]).data("init")&&$(e[t]).slick()},certy.carousel=function(e){for(var t=0;t<e.length;t++)"none"!==$(e[t]).data("init")&&$(e[t]).slick({dots:!0})},certy.portfolio={},certy.portfolio.initGrid=function(e){var t=e.isotope({isOriginLeft:!certy.vars.rtl,itemSelector:".pf-grid-item",percentPosition:!0,masonry:{columnWidth:".pf-grid-sizer"}});t.imagesLoaded().progress(function(){t.isotope("layout")});var o=e.closest(".pf-wrap").find(".pf-filter");if(o.length>0){var r=o.find("button"),i=$(".pf-filter button:first-child");i.addClass("active"),r.on("click",function(){r.removeClass("active"),$(this).addClass("active");var e=$(this).attr("data-filter");t.isotope({filter:e})})}},certy.portfolio.openPopup=function(e){certy.vars.html.addClass("cr-portfolio-opened"),this.popup_wrapper=$('<div id="pf-popup-wrap"><div class="pf-popup-inner"><div class="pf-popup-middle"><div class="pf-popup-container"><button id="pf-popup-close"><i class="rsicon rsicon-close"></i></button><div id="pf-popup-content" class="pf-popup-content"></div></div></div></div></div>'),certy.vars.body.append(this.popup_wrapper),this.popup_content=$("#pf-popup-content"),this.popup_content.append(e.clone()),$("#pf-popup-content .pf-popup-media").slick({dots:!0,arrows:!1}),$("#pf-popup-content .pf-rel-list").slick({dots:!1,infinite:!0,slidesToShow:3,slidesToScroll:3}),this.popup_wrapper.addClass("pf-opened"),certy.lockScroll()},certy.portfolio.closePopup=function(e){certy.vars.html.removeClass("cr-portfolio-opened"),this.popup_wrapper.removeClass("pf-opened"),setTimeout(function(){certy.portfolio.popup_wrapper.remove(),certy.unlockScroll()},500)},function(e){"use strict";e(function(){certy.initGlobalVars(),certy.vars.html.hasClass("crt-nav-on")&&(Modernizr.mq("(min-width: "+certy.vars.screenMd+")")&&"auto"!==certy.nav.height&&certy.nav.initScroll(e("#crt-nav-scroll")),certy.nav.makeSticky(),certy.nav.tooltip.active&&e("#crt-nav a").hover(function(){certy.nav.tooltip.show(e(this))},function(){certy.nav.tooltip.hide()}),e("#crt-nav").onePageNav({changeHash:!0,filter:":not(.external)"})),certy.sideBox.makeSticky();var t=e(".pf-grid");t.length>0&&(certy.portfolio.initGrid(t),e(document).on("click",".pf-project",function(){var t=e(this).attr("href");return certy.portfolio.openPopup(e(t)),!1}),e(document).on("touchstart click",".cr-portfolio-opened #pf-popup-wrap",function(t){var o=e("#pf-popup-content");o.is(t.target)||0!==o.has(t.target).length||certy.portfolio.closePopup()})),certy.slider(e(".cr-slider")),certy.carousel(e(".cr-carousel"))}),e(window).on("resize",function(){certy.vars.windowW=e(window).width(),certy.vars.windowH=e(window).height(),certy.vars.windowScrollTop=e(window).scrollTop(),certy.nav.makeSticky(),certy.sideBox.makeSticky()}),e(window).on("scroll",function(){certy.vars.windowScrollTop=e(window).scrollTop(),certy.nav.makeSticky(),certy.sideBox.makeSticky(),certy.nav.tooltip.el.length>0&&certy.nav.tooltip.el.remove()}),e(window).on("load",function(){})}(jQuery);var ace={html:"",body:"",mobile:"",sidebar:{obj:"",btn:""},nav:{obj:"",tooltip:$('<div class="crt-tooltip"></div>')},overlay:{obj:$('<div id="crt-overlay"></div>')},progress:{lines:"",charts:"",bullets:""}};$(function(){if(ace.html=$("html"),ace.body=$("body"),ace_detect_device_type(),$("#crt-main-nav-sm .has-sub-menu > a").on("click touchstart",function(){return!!$(this).hasClass("hover")||($(this).addClass("hover"),$(this).next().slideDown(500),!1)}),ace.sidebar.obj=$("#crt-sidebar"),ace.sidebar.btn=$("#crt-sidebar-btn"),ace.sidebar.btn.on("touchstart click",function(){ace_open_sidebar()}),$(document).on("touchstart click",".crt-sidebar-opened #crt-overlay",function(e){var t=ace.sidebar.obj;t.is(e.target)||0!==t.has(e.target).length||ace_close_sidebar()}),$("#crt-sidebar-close").on("click",function(){ace_close_sidebar()}),$("#crt-sidebar-inner").mCustomScrollbar({axis:"y",theme:"minimal-dark",autoHideScrollbar:!0,scrollButtons:{enable:!0}}),!certy.progress.animation||ace.mobile){ace.progress.charts=$(".progress-chart .progress-bar");for(var e=0;e<ace.progress.charts.length;e++){var t=$(ace.progress.charts[e]);ace_progress_chart(t[0],t.data("text"),t.data("value"),1)}ace.progress.lines=$(".progress-line .progress-bar");for(var e=0;e<ace.progress.lines.length;e++){var o=$(ace.progress.lines[e]);ace_progress_line(o[0],o.data("text"),o.data("value"),1)}}certy.progress.animation&&!ace.mobile&&ace_appear_elems($(".crt-animate"),150),$("pre").each(function(e,t){hljs.highlightBlock(t)}),$(".alert .close").on("click",function(){var e=$(this).parent();e.fadeOut(500,function(){e.remove()})}),$(".slider").slick({dots:!0}),$("#map").length>0&&initialiseGoogleMap();var r=$(".tabs-menu>li.active");if(r.length>0)for(var e=0;e<r.length;e++){var i=$(r[e]).children().attr("href");$(i).addClass("active").show()}$(".tabs-menu a").on("click",function(e){var t=$(this),o=t.attr("href"),r=t.closest(".tabs"),i=r.find(".tab-content");t.parent().addClass("active"),t.parent().siblings().removeClass("active"),i.not(o).removeClass("active").hide(),$(o).addClass("active").fadeIn(500),e.preventDefault()});var a=$(".togglebox>li.active");a.length>0&&a.find(".togglebox-content").show(),$(".togglebox-header").on("click",function(){var e=$(this);e.next(".togglebox-content").slideToggle(300),e.parent().toggleClass("active")});var s=$(".accordion>li.active");s.length>0&&s.find(".accordion-content").show(),$(".accordion-header").on("click",function(){var e=$(this),t=e.parent(),o=e.next(),r=e.closest(".accordion").find(".accordion-content");t.hasClass("active")?(t.removeClass("active"),o.slideUp()):(t.siblings().removeClass("active"),t.addClass("active"),r.slideUp(300),o.slideDown(300))}),$(".comment-replys-link").on("click",function(){return $(this).closest(".comment").toggleClass("show-replies"),!1});var l={};l.wrapper=null,l.content=null,l.slider=null,l.open=function(e){this.wrapper=$('<div id="pf-popup-wrap" class="pf-popup-wrap"><div class="pf-popup-inner"><div class="pf-popup-middle"><div class="pf-popup-container"><button id="pf-popup-close"><i class="rsicon rsicon-close"></i></button><div id="pf-popup-content" class="pf-popup-content"></div></div></div></div>'),ace.body.append(this.wrapper),this.content=$("#pf-popup-content"),this.content.append(e.clone()),l.wrapper.addClass("opened"),ace_lock_scroll()},l.close=function(){this.wrapper.removeClass("opened"),setTimeout(function(){l.wrapper.remove(),ace_unlock_scroll()},500)},$(document).on("click",".pf-btn-view",function(){var e=$(this).attr("href");return l.open($(e)),ace.html.addClass("crt-portfolio-opened"),!1}),$(document).on("touchstart click",".crt-portfolio-opened #pf-popup-wrap",function(e){var t=$("#pf-popup-content");t.is(e.target)||0!==t.has(e.target).length||(l.close(),ace.html.removeClass("crt-portfolio-opened"))}),$(".toggle-link").on("click",function(){var e=$(this).attr("href");return $(this).hasClass("opened")?($(e).slideUp(500),$(this).removeClass("opened")):($(e).slideDown(500),$(this).addClass("opened")),!1}),$("#btn-share").on("mouseenter",function(){$(this).parent().addClass("hovered")}),$(".crt-share-box").on("mouseleave",function(){var e=$(this);e.hasClass("hovered")&&(e.addClass("closing"),setTimeout(function(){e.removeClass("hovered"),e.removeClass("closing")},300))})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
